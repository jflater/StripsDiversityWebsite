phy <- readRDS("data/RDS/usda.RDS")
phy <- readRDS("../data/RDS/usda.RDS")
taxa_names(phy) <- paste0('ASV_', seq_along(taxa_names(phy))) #this renames the "OTU" to ASV1....ASV1000...
sample_data(phy) <- read.delim(sep="\t", file="data/meta.txt", row.names=1, header=TRUE)
sample_data(phy) <- read.delim(sep="\t", file="../data/meta.txt", row.names=1, header=TRUE)
colnames(sample_data(phy)) <- c("PI", "source", "date", "concentration")
worle <- subset_samples(phy, PI == "Jared")
worle
phy <- readRDS("data/RDS/usda.RDS")
phy <- readRDS("../data/RDS/usda.RDS")
#taxa_names(phy) <- paste0('ASV_', seq_along(taxa_names(phy))) #this renames the "OTU" to ASV1....ASV1000...
sample_data(phy) <- read.delim(sep="\t", file="../data/meta.txt", row.names=1, header=TRUE)
colnames(sample_data(phy)) <- c("PI", "source", "date", "concentration")
worle <- subset_samples(phy, PI == "Jared")
worle
library(vegan)
library(plyr)
library(tidyverse)
library(phyloseq)
library(phylosmith)
setwd('~/Documents/StripsDiversityWebsite/')
worle <- readRDS("data/Worle_curated.RDS")
# Two baseline phyloseq, one for each depth
baseline1 <- subset_samples(worle, treatment == "no_manure_strip" & depth == "1" & soil_type != "border" & matrix == "soil") %>%
filter_taxa(function(x) sum(x) >= 1, T)
baseline2 <- subset_samples(worle, treatment == "no_manure_strip" & depth == "2" & soil_type != "border" & matrix == "soil")  %>%
filter_taxa(function(x) sum(x) >= 1, T)
pcoa_phyloseq(baseline1, treatment = c("soil_type", "sample_day"), x = 1, y = 2, method = 'bray', circle = 0.95, colors = 'default', labels = NULL)
pcoa_phyloseq(baseline2, treatment = c("soil_type", "sample_day"), x = 1, y = 2, method = 'bray', circle = 0.95, colors = 'default', labels = NULL)
nmds_phyloseq(baseline1, treatment = c("soil_type", "sample_day"), method = 'bray', circle = 0.95, colors = 'default', labels = NULL)
nmds_phyloseq(baseline2, treatment = c("soil_type", "sample_day"), method = 'bray', circle = 0.95, colors = 'default', labels = NULL)
# Plot PCoA ordinations
# D1
ord1 <- ordinate(baseline1, "PCoA", "bray")
p1d1 <- plot_ordination(baseline1, ord1, color = "soil_type") +
geom_point(size = 2) +
facet_grid(sample_day ~ plot)
p1d1
# D2
ord2 <- ordinate(baseline2, "PCoA", "bray")
p2d2 <- plot_ordination(baseline2, ord2, color = "soil_type") +
geom_point(size = 2) +
facet_grid(sample_day ~ plot)
p2d2
#stats
#d1
day_list <- unique(sample_data(worle)$sample_day)
for (i in 1:length(day_list)) {
baseline.1 <- subset_samples(worle, sample_day == day_list[i] & treatment == "no_manure_strip" & depth == "1" & soil_type != "border" & matrix == "soil") %>%
filter_taxa(function(x) sum(x) >= 1, T)
bray <- phyloseq::distance(physeq = baseline.1, method = "bray")
print(day_list[i])
print(adonis(bray ~ soil_type + as.factor(plot), data = data.frame(sample_data(baseline.1)), permutations = 999, methods = "bray"))
}
#d2
for (i in 1:length(day_list)) {
baseline.2 <- subset_samples(worle, sample_day == day_list[i] & treatment == "no_manure_strip" & depth == "2" & soil_type != "border" & matrix == "soil") %>%
filter_taxa(function(x) sum(x) >= 1, T)
bray <- phyloseq::distance(physeq = baseline.2, method = "bray")
print(day_list[i])
print(adonis(bray ~ soil_type + as.factor(plot), data = data.frame(sample_data(baseline.2)), permutations = 999, methods = "bray"))
}
# Betadiversity measures d1
baseline1 <- subset_samples(worle, treatment == "no_manure_strip" & depth == "1" & soil_type != "border" & matrix == "soil") %>%
filter_taxa(function(x) sum(x) >= 1, T)
library(data.table)
ord <- ordinate(baseline1, "PCoA", "bray")
ord.df <- data.table(ord$vectors, keep.rownames = TRUE)
setnames(ord.df, "rn", "SampleID")
ord.df$SampleID
ggplot(ord.df, aes())
sdt = data.table(as(sample_data(baseline1), "data.frame"),
keep.rownames = TRUE)
setnames(sdt, "rn", "SampleID")
c <- subset(sdt, soil_type == "crop")
combined <- merge(ord.df, sdt, by = "SampleID")
head(combined)
combined2 <- plyr::ddply(combined, .(sample_day, soil_type),summarise, MEAN.1 = mean(Axis.1), SE = sd(Axis.1)/sqrt(length(Axis.1)))
limits <- aes(ymin = MEAN.1 - SE, ymax = MEAN.1 + SE)
ggplot(combined2, aes(x = sample_day, y = MEAN.1, group = soil_type, color = soil_type)) + geom_point() + geom_line() + geom_errorbar(limits, width = 0)
ggsave("d1")
#shows more distance from baseline in PC1 of strips compared to crop
# 10/19/20 Ask Adina if MEAN.1 should have called Axis.2, it had Axis.1
combined3 <- plyr::ddply(combined, .(sample_day, soil_type),summarise, MEAN.1 = mean(Axis.2), SE = sd(Axis.2)/sqrt(length(Axis.2)))
limits <- aes(ymin = MEAN.1 - SE, ymax = MEAN.1 + SE)
ggplot(combined3, aes(x = sample_day, y = MEAN.1, group = soil_type, color = soil_type)) + geom_point() + geom_line() + geom_errorbar(limits, width = 0)
#shows more distance from baseline in PC2 of strips compared to crop
# Betadiversity measures d2
library(data.table)
ord <- ordinate(baseline2, "PCoA", "bray")
ord.df <- data.table(ord$vectors, keep.rownames = TRUE)
setnames(ord.df, "rn", "SampleID")
ord.df$SampleID
ggplot(ord.df, aes())
sdt = data.table(as(sample_data(baseline2), "data.frame"),
keep.rownames = TRUE)
setnames(sdt, "rn", "SampleID")
c <- subset(sdt, soil_type == "crop")
combined <- merge(ord.df, sdt, by = "SampleID")
head(combined)
combined2 <- plyr::ddply(combined, .(sample_day, soil_type),summarise, MEAN.1 = mean(Axis.1), SE = sd(Axis.1)/sqrt(length(Axis.1)))
limits <- aes(ymin = MEAN.1 - SE, ymax = MEAN.1 + SE)
ggplot(combined2, aes(x = sample_day, y = MEAN.1, group = soil_type, color = soil_type)) + geom_point() + geom_line() + geom_errorbar(limits, width = 0)
#shows more distance from baseline in PC1 of strips compared to crop
# 10/19/20 Ask Adina if MEAN.1 should have called Axis.2, it had Axis.1
combined3 <- plyr::ddply(combined, .(sample_day, soil_type),summarise, MEAN.1 = mean(Axis.2), SE = sd(Axis.2)/sqrt(length(Axis.2)))
limits <- aes(ymin = MEAN.1 - SE, ymax = MEAN.1 + SE)
ggplot(combined3, aes(x = sample_day, y = MEAN.1, group = soil_type, color = soil_type)) + geom_point() + geom_line() + geom_errorbar(limits, width = 0)
#shows more distance from baseline in PC2 of strips compared to crop
ggplot(combined2, aes(x = sample_day, y = MEAN.1, group = soil_type, color = soil_type)) + geom_point() + geom_line() + geom_errorbar(limits, width = 0)
library(phyloseq)
library(tidyverse)
library(ggplot2)
library(stats)
library(agricolae)
library(ggpubr)
library(kableExtra)
library(phylosmith)
library(data.table)
library(microbiome)
library(vegan)
library(gridExtra)
# Read in all strips samples
altstrips <- readRDS("data/all_samples_merged_STRIPS.RDS")
head(taxa_names(altstrips))
taxa_names(altstrips) <- paste0("ASV", seq(ntaxa(altstrips)))
# simple plot of sample sums
data.frame(sample_sums(altstrips)) %>%
cbind(., data.frame(sample_data(altstrips))) %>%
rownames_to_column(var = "Sample") %>%
as_tibble() %>%
filter(sample_sums.altstrips. <= 10000) %T>% {print(paste0(nrow(.)," samples with less than 10k"))} %>% # print number of samples with less than 10k to the console
ggplot(aes(x = reorder(Sample, sample_sums.altstrips.), y = sample_sums.altstrips.)) +
geom_bar(stat = "identity", aes(fill = matrix)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_grid(depth~experiment)
theme_my <- function(base_size = 7, base_family = "Palatino")
{
txt <- element_text(size = 6, colour = "black", face = "plain")
bold_txt <- element_text(size = 7, colour = "black", face = "bold")
theme_bw(base_size = base_size, base_family = base_family) +
theme(
#legend.key = element_blank(),
#strip.background = element_blank(),
text = txt,
plot.title = txt,
axis.title = bold_txt,
axis.text = txt,
axis.text.x = element_text(angle = 25, vjust = 1, hjust = 1),
legend.title = bold_txt,
legend.text = txt)
}
Wdbase <- subset_samples(altstrips, experiment %in% "Worle_Rainfall" & sample_day %in% "Baseline" & !soil_type %in% "border" & matrix %in% "soil")
Adbase <- subset_samples(altstrips, experiment %in% "Armstrong_Rainfall" & sample_day %in% "Baseline" & !soil_type %in% "border" & matrix %in% "soil")
#Wdbaserichness <- estimate_richness(Wdbase)
#Adbaserichness <- estimate_richness(Adbase)
W_Base_Shannon <- sample_data(Wdbase) %>%
lapply(., factor) %>%
as_tibble() %>%
cbind(., estimate_richness(Wdbase, )) %>%
ggboxplot(x = "soil_type", y = "Shannon", add = "jitter", notch = F, color = "soil_type", size = .2) +
stat_compare_means(size = 2) +
ggtitle("Shannon diversity index of WOR baseline soils faceted by depth") +
ylab("Shannon Diversity") +
scale_color_viridis_d() +
scale_x_discrete(name = "Soil type", labels = c("crop" = "Ag soil", "strip" = "Prairie strip soil")) +
facet_wrap( ~ depth) +
theme_my() +
theme(legend.position = "none")
print(min(taxa_sums(Wdbase)))
# Armstrong
A_Base_Shannon <- sample_data(Adbase) %>%
lapply(., factor) %>%
as_tibble() %>%
cbind(., estimate_richness(Adbase, )) %>%
ggboxplot(x = "soil_type", y = "Shannon", add = "jitter", notch = F, color = "soil_type", size = .2) +
stat_compare_means(size = 2) +
ggtitle("Shannon diversity index of ARM baseline soils faceted by depth") +
ylab("Shannon Diversity") +
scale_color_viridis_d() +
scale_x_discrete(name = "Soil type", labels = c("crop" = "Ag soil", "strip" = "Prairie strip soil")) +
facet_wrap( ~ depth) +
theme_my() +
theme(legend.position = "none")
print(min(taxa_sums(Wdbase)))
ggsave("images/WnA_Base_Shannon.png", arrangeGrob(W_Base_Shannon, A_Base_Shannon), units = "cm", height = 18, width = 8)
A_Base_Shannon$data
A_Base_Shannon$data %>%
group_by(soil_type)
A_Base_Shannon$data %>%
dplyr::group_by(soil_type)
A_Base_Shannon$data
group <- A_Base_Shannon$data %>%
dplyr::group_by(soil_type)
group
View(group)
View(group)
class(group)
group <- A_Base_Shannon$data %>%
as_tibble() %>%
dplyr::group_by(soil_type)
group
group <- A_Base_Shannon$data %>%
dplyr::group_by(soil_type)
group
group <- A_Base_Shannon$data %>%
dplyr::group_by(soil_type) %L>%
summarise(mshan = mean(Shannon), mobs = mean(Observed), msimp = mean(Simpson))
group <- A_Base_Shannon$data %>%
dplyr::group_by(soil_type) %>%
summarise(mshan = mean(Shannon), mobs = mean(Observed), msimp = mean(Simpson))
group
group <- A_Base_Shannon$data %>%
dplyr::group_by(soil_type, depth) %>%
summarise(mshan = mean(Shannon), mobs = mean(Observed), msimp = mean(Simpson))
group
rarecurve(t(otu_table(Wdbase)), step = , cex = 0.5)
