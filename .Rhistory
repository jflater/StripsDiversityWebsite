lapply(., factor) %>%
as_tibble()
richness <- estimate_richness(Wd1)
sample_data <- cbind(sample_data, richness)
p <- ggboxplot(sample_data, x = "sample_day", y = "ACE", fill = "soil_type", add = "jitter", notch = F)
plot <- p + stat_compare_means(aes(group = soil_type), label = "p.signif") +
ggtitle("ACE diversity index of WORLE detph 1 soils") +
ylab("ACE Diversity") +
xlab("Sampling Day") + scale_fill_viridis_d(name = "Managment", labels = c("Ag", "Prairie"))
plot
ggsave("images/WorleD1ACE.png", plot = plot, device = "png", width = 6, height = 4, units = "in")
View(richness)
Wdbaserichness <- estimate_richness(Wdbase)
Wdbaserichness
Wdbase <- subset_samples(altstrips, experiment %in% "Worle_Rainfall" & sample_day %in% "Baseline" & !soil_type %in% "border" & depth %in% "1")
Wdbaserichness <- estimate_richness(Wdbase)
Wdbaserichness
Adbase <- subset_samples(altstrips, experiment %in% "Armstrong_Rainfall" & sample_day %in% "Baseline" & !soil_type %in% "border" & depth %in% "1")
Wdbaserichness <- estimate_richness(Adbase)
Wdbaserichness
tdt <- data.table(tax_table(altstrips),
TotalCounts = taxa_sums(altstrips),
OTU = taxa_names(altstrips))
library(data.table)
tdt <- data.table(tax_table(altstrips),
TotalCounts = taxa_sums(altstrips),
OTU = taxa_names(altstrips))
ggplot(tdt, aes(TotalCounts)) +
geom_histogram() +
ggtitle("Histogram of Total Counts")
tdt[(TotalCounts <= 0), .N]
tdt[(TotalCounts <= 1), .N]
tdt[(TotalCounts <= 2), .N]
library(DECIPHER)
library(phangorn)
library(dada2)
library(phyloseq)
library(doParallel)
?optim.pml
?pml
?pml
readRDS("Documents/StripsDiversityWebsite/data/fittree.RDS")
fit <- readRDS("Documents/StripsDiversityWebsite/data/fittree.RDS")
library(phyloseq)
setwd("~/Documents/StripsDiversityWebsite/")
strips <- readRDS("data/all_samples_merged_STRIPS.RDS")
Allbase <- subset_samples(strips, sample_day %in% "Baseline" & !soil_type %in% "border" & depth %in% "1")
Allbase
Allbase <- subset_samples(strips, sample_day %in% "Baseline" & !soil_type %in% "border" & depth %in% "1") %>%
filter_taxa(function(x) sum(x >= 5) > (0.2*length(x)), T)
Allbase
Allbase <- subset_samples(strips, sample_day %in% "Baseline" & !soil_type %in% "border" & depth %in% "1") %>%
filter_taxa(function(x) sum(x >= 5) > (0.1*length(x)), T)
Allbase
Allbase <- subset_samples(strips, sample_day %in% "Baseline" & !soil_type %in% "border" & depth %in% "1") %>%
filter_taxa(function(x) sum(x >= 5) > (0.01*length(x)), T)
Allbase
Allbase <- subset_samples(strips, sample_day %in% "Baseline" & !soil_type %in% "border" & depth %in% "1") %>%
filter_taxa(function(x) sum(x >= 3) > (0.2*length(x)), T)
Allbase
detectCores(all.tests = TRUE)
library(phyloseq)
library(tidyverse)
library(ggplot2)
library(stats)
library(agricolae)
library(ggpubr)
library(kableExtra)
library(phylosmith)
library(data.table)
library(microbiome)
ordinate(Allbase, "PCoA", "bray") %>%
plot_ordination(Allbase, ., color = "soil_type", shape = "experiment", title = "Bray-Curtis PCoA")
ordinate(Allbase, "NMDS", "bray") %>%
plot_ordination(Allbase, ., color = "soil_type", shape = "experiment", title = "Bray-Curtis NMDS")
optimiezedTree <- readRDS("data/d1mintax5tree.RDS")
Allbasewtree <- phyloseq(Allbase, phy_tree(optimiezedTree))
Allbasewtree
Allbase
optimiezedTree
Allbasewtree <- merge_phyloseq(Allbase, phy_tree(optimiezedTree))
taxa_names(Allbase)
strips <- readRDS("data/all_samples_merged_STRIPS.RDS")
Allbase <- subset_samples(strips, sample_day %in% "Baseline" & !soil_type %in% "border" & depth %in% "1") %>%
filter_taxa(function(x) sum(x >= 3) > (0.2*length(x)), T)
rm(strips)
taxa_names(Allbase) <- paste0("ASV", seq(ntaxa(Allbase)))
ordinate(Allbase, "PCoA", "bray") %>%
plot_ordination(Allbase, ., color = "soil_type", shape = "experiment", title = "Bray-Curtis PCoA")
ordinate(Allbase, "NMDS", "bray") %>%
plot_ordination(Allbase, ., color = "soil_type", shape = "experiment", title = "Bray-Curtis NMDS")
optimiezedTree <- readRDS("data/d1mintax5tree.RDS")
Allbasewtree <- merge_phyloseq(Allbase, phy_tree(optimiezedTree))
Allbasewtree
ordinate(Allbase, "NMDS", "wunifrac") %>%
plot_ordination(Allbase, ., color = "soil_type", shape = "experiment", title = "wunifrac")
ordinate(Allbasewtree, "NMDS", "wunifrac") %>%
plot_ordination(Allbasewtree, ., color = "soil_type", shape = "experiment", title = "wunifrac")
plot_tree(Allbasewtree, color = "Phylum", shape = "experiment", size = "abundance")
plot_tree(Allbasewtree, color = "soil_type", shape = "experiment", size = "abundance")
plot_tree(Allbasewtree, color = "experiment", shape = "soil_type", size = "abundance")
worle <- subset_samples(Allbasewtree, experiment %in% "Worle_Rainfall") %>%
filter_taxa(function(x) sum(x) >= 1, T)
worle
ordinate(worle, "NMDS", "wunifrac") %>%
plot_ordination(worle, ., color = "soil_type", shape = "experiment", title = "wunifrac at WORLE")
colnames(sample_data(worle))
ordinate(worle, "NMDS", "wunifrac") %>%
plot_ordination(worle, ., color = "in_plot_location", shape = "soil_type", title = "wunifrac at WORLE")
worle <- subset_samples(Allbasewtree, experiment %in% "Worle_Rainfall") %>%
filter_taxa(function(x) sum(x) >= 5, T)
worle
worle <- subset_samples(Allbasewtree, experiment %in% "Worle_Rainfall") %>%
filter_taxa(function(x) sum(x) >= 10, T)
worle
ordinate(worle, "NMDS", "wunifrac") %>%
plot_ordination(worle, ., color = "soil_type", shape = "experiment", title = "wunifrac at WORLE")
colnames(sample_data(worle))
ordinate(worle, "NMDS", "wunifrac") %>%
plot_ordination(worle, ., color = "in_plot_location", shape = "soil_type", title = "wunifrac at WORLE")
ordinate(worle, "NMDS", "wunifrac") %>%
plot_ordination(worle, ., color = "soil_type", title = "wunifrac at WORLE")
colnames(sample_data(worle))
ordinate(worle, "NMDS", "wunifrac") %>%
plot_ordination(worle, ., color = "in_plot_location", shape = "soil_type", title = "wunifrac at WORLE")
worle <- subset_samples(Allbasewtree, experiment %in% "Worle_Rainfall") %>%
filter_taxa(function(x) sum(x) >= 1, T)
worle
ordinate(worle, "NMDS", "wunifrac") %>%
plot_ordination(worle, ., color = "soil_type", title = "wunifrac at WORLE")
ordinate(worle, "NMDS", "wunifrac") %>%
plot_ordination(worle, ., color = "soil_type", title = "wunifrac at WORLE") +
stat_ellipse(geom = "polygon", type = "norm", alpha = 0.1, aes(fill = soil_type)) +
scale_colour_viridis_d() + ggplot2::theme_bw() +
guides(fill = guide_legend(title = "Vegetation"))
ordinate(worle, "NMDS", "wunifrac") %>%
plot_ordination(worle, ., color = "soil_type", title = "wunifrac at WORLE") +
stat_ellipse(geom = "polygon", type = "norm", alpha = 0.1, aes(fill = soil_type)) +
guides(fill = guide_legend(title = "Vegetation"))
ordinate(worle, "NMDS", "wunifrac") %>%
plot_ordination(worle, ., color = "soil_type", title = "wunifrac at WORLE") +
stat_ellipse(geom = "polygon", type = "norm", alpha = 0.1, aes(fill = soil_type))
library(vegan)
adonis(phyloseq::distance(worle, method = "wunifrac") ~ soil_type, data = data.frame(sample_data(worle)))
ordinate(worle, "NMDS", "wunifrac") %>%
plot_ordination(worle, ., color = "soil_type", title = "wunifrac at WORLE") +
stat_ellipse(geom = "polygon", type = "norm", alpha = 0.1, aes(fill = soil_type))
adonis(phyloseq::distance(worle, method = "wunifrac") ~ soil_type, data = data.frame(sample_data(worle)))
library(phyloseq)
library(tidyverse)
library(ggplot2)
library(stats)
library(agricolae)
library(ggpubr)
library(kableExtra)
library(phylosmith)
library(data.table)
library(microbiome)
# Read in all strips samples
altstrips <- readRDS("data/all_samples_merged_STRIPS.RDS")
# simple plot of sample sums
data.frame(sample_sums(altstrips)) %>%
cbind(., data.frame(sample_data(altstrips))) %>%
rownames_to_column(var = "Sample") %>%
as_tibble() %>%
filter(sample_sums.altstrips. <= 10000) %T>% {print(paste0(nrow(.)," samples with less than 10k"))} %>%
ggplot(aes(x = reorder(Sample, sample_sums.altstrips.), y = sample_sums.altstrips.)) +
geom_bar(stat = "identity", aes(fill = matrix)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_grid(depth~experiment)
# Subset to WORLE depth one no manure, exclude the border sample from each plot.
Wd1 <- subset_samples(altstrips, experiment %in% "Worle_Rainfall" & manure_treatment %in% "N" & !soil_type %in% "border" & depth %in% "1")
kable(data.frame(sample_data(Wd1))) %>%
kable_styling(bootstrap_options = "striped") %>%
scroll_box(width = "100%", height = "600px")
summarize_phyloseq(Wd1)
plot_richness(Wd1, measures = c("Observed", "Shannon", "Simpson"), scales = "free")
tab <- microbiome::alpha(Wd1, index = "all") # Alternative package to calculate diversity `microbiome`
head(tab)
Wdbase <- subset_samples(altstrips, experiment %in% "Worle_Rainfall" & sample_day %in% "Baseline" & !soil_type %in% "border" & depth %in% "1")
Adbase <- subset_samples(altstrips, experiment %in% "Armstrong_Rainfall" & sample_day %in% "Baseline" & !soil_type %in% "border" & depth %in% "1")
#Wdbaserichness <- estimate_richness(Wdbase)
#Adbaserichness <- estimate_richness(Adbase)
sample_data(Wdbase) %>%
lapply(., factor) %>%
as_tibble() %>%
cbind(., estimate_richness(Wdbase, )) %>%
ggboxplot(x = "soil_type", y = "Shannon", add = "jitter", notch = T, color = "soil_type") +
stat_compare_means() +
theme(legend.position = "none") +
ggtitle("Shannon diversity index of WORLE baseline detph 1 soils") +
ylab("Shannon Diversity") +
scale_color_viridis_d() +
scale_x_discrete(name = "Soil type", labels = c("crop" = "Ag soil", "strip" = "Prairie strip soil"))
print(min(taxa_sums(Wdbase)))
Wdbase <- subset_samples(altstrips, experiment %in% "Worle_Rainfall" & sample_day %in% "Baseline" & !soil_type %in% "border" & depth %in% "1")
Adbase <- subset_samples(altstrips, experiment %in% "Armstrong_Rainfall" & sample_day %in% "Baseline" & !soil_type %in% "border" & depth %in% "1")
#Wdbaserichness <- estimate_richness(Wdbase)
#Adbaserichness <- estimate_richness(Adbase)
sample_data(Wdbase) %>%
lapply(., factor) %>%
as_tibble() %>%
cbind(., estimate_richness(Wdbase, )) %>%
ggboxplot(x = "soil_type", y = "Shannon", add = "jitter", notch = T, color = "soil_type") +
stat_compare_means() +
theme(legend.position = "none") +
ggtitle("Shannon diversity index of WORLE baseline detph 1 soils") +
ylab("Shannon Diversity") +
scale_color_viridis_d() +
scale_x_discrete(name = "Soil type", labels = c("crop" = "Ag soil", "strip" = "Prairie strip soil"))
print(min(taxa_sums(Wdbase)))
# Armstrong
sample_data(Adbase) %>%
lapply(., factor) %>%
as_tibble() %>%
cbind(., estimate_richness(Adbase, )) %>%
ggboxplot(x = "soil_type", y = "Shannon", add = "jitter", notch = T, color = "soil_type") +
stat_compare_means() +
theme(legend.position = "none") +
ggtitle("Shannon diversity index of Armstrong baseline detph 1 soils") +
ylab("Shannon Diversity") +
scale_color_viridis_d() +
scale_x_discrete(name = "Soil type", labels = c("crop" = "Ag soil", "strip" = "Prairie strip soil"))
print(min(taxa_sums(Wdbase)))
# Simpson diversity
# WORLE
sample_data(Wdbase) %>%
lapply(., factor) %>%
as_tibble() %>%
cbind(., estimate_richness(Wdbase, )) %>%
ggboxplot(x = "soil_type", y = "Simpson", add = "jitter", notch = T, color = "soil_type") +
stat_compare_means() +
theme(legend.position = "none") +
ggtitle("Simpson diversity index of WORLE baseline detph 1 soils") +
ylab("Simpson Diversity") +
scale_color_viridis_d() +
scale_x_discrete(name = "Soil type", labels = c("crop" = "Ag soil", "strip" = "Prairie strip soil"))
# Armstrong
sample_data(Adbase) %>%
lapply(., factor) %>%
as_tibble() %>%
cbind(., estimate_richness(Adbase, )) %>%
ggboxplot(x = "soil_type", y = "Simpson", add = "jitter", notch = T, color = "soil_type") +
stat_compare_means() +
theme(legend.position = "none") +
ggtitle("Simpson diversity index of Armstrong baseline detph 1 soils") +
ylab("Simpson Diversity") +
scale_color_viridis_d() +
scale_x_discrete(name = "Soil type", labels = c("crop" = "Ag soil", "strip" = "Prairie strip soil"))
sample_data(Wdbase) %>%
lapply(., factor) %>%
as_tibble() %>%
cbind(., estimate_richness(Wdbase, )) %>%
ggboxplot(x = "soil_type", y = "Observed", add = "jitter", notch = F, color = "soil_type") +
stat_compare_means() +
theme(legend.position = "none") +
ggtitle("Observed diversity index of WORLE baseline detph 1 soils") +
ylab("Observed Diversity") +
scale_color_viridis_d() +
scale_x_discrete(name = "Soil type", labels = c("crop" = "Ag soil", "strip" = "Prairie strip soil"))
# Armstrong
sample_data(Adbase) %>%
lapply(., factor) %>%
as_tibble() %>%
cbind(., estimate_richness(Adbase, )) %>%
ggboxplot(x = "soil_type", y = "Observed", add = "jitter", notch = F, color = "soil_type") +
stat_compare_means() +
theme(legend.position = "none") +
ggtitle("Observed diversity index of Armstrong baseline detph 1 soils") +
ylab("Observed Diversity") +
scale_color_viridis_d() +
scale_x_discrete(name = "Soil type", labels = c("crop" = "Ag soil", "strip" = "Prairie strip soil"))
library(phyloseq)
library(tidyverse)
library(ggplot2)
library(stats)
library(agricolae)
library(ggpubr)
library(kableExtra)
library(phylosmith)
library(data.table)
library(microbiome)
library(phyloseq)
library(tidyverse)
library(ggplot2)
library(stats)
library(agricolae)
library(ggpubr)
library(kableExtra)
library(phylosmith)
library(data.table)
library(microbiome)
# Read in all strips samples
altstrips <- readRDS("data/all_samples_merged_STRIPS.RDS")
# Subset to WORLE depth one no manure, exclude the border sample from each plot.
Wd1 <- subset_samples(altstrips, experiment %in% "Worle_Rainfall" & manure_treatment %in% "N" & !soil_type %in% "border" & depth %in% "1")
kable(data.frame(sample_data(Wd1))) %>%
kable_styling(bootstrap_options = "striped") %>%
scroll_box(width = "100%", height = "600px")
singletons <- as(otu_table(Wd1), "matrix")
melt(singletons) %>% filter(value == 1) %>% select(Var1, Var2)
taxa_names(Wd1) <- paste0("ASV", seq(ntaxa(Wd1)))
singletons <- as(otu_table(Wd1), "matrix")
test <- melt(singletons) %>% filter(value == 1)
View(test)
test <- melt(singletons) %>% filter(value == 1) %>% select(Var1, Var2, value)
View(test)
singletons <- as(otu_table(Wd1), "matrix") %>%
as.data.table
test <- melt(singletons) %>% filter(value == 1) %>% select(Var1, Var2, value)
singletons <- as(otu_table(Wd1), "matrix") %>%
as.data.table()
test <- melt(singletons) %>% filter(value == 1) %>% select(Var1, Var2, value)
View(test)
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble()
View(singletons)
singletons <- as(otu_table(Wd1), "matrix") %>%
rownames_to_column(var = ASV) %>%
as_tibble()
singletons <- as(otu_table(Wd1), "matrix") %>%
rownames_to_column(var = "ASV") %>%
as_tibble()
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV")
View(singletons)
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_at(all_vars(. == 1))
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_at(all_wars(.), all_vars(. == 1))
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_at(all_vars(.), all_vars(. == 1))
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_at(all_vars(.== 1))
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(vars(. == 1))
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_at(vars(-ASV), all_vars(. == 1))
View(singletons)
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV")
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(all_vars(. == 1))
View(singletons)
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV")
View(singletons)
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(all_vars(. == 2))
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(all_vars(. == 10))
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(all_vars(vallue == 1))
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(all_vars(value == 1))
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV")
class(singletons)
singletons
singletons %>%
filter_all(any_vars(. < 2))
singletons %>%
filter_all(any_vars(. == 1))
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 1))
singletons
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
select(filter_all(any_vars(. == 1)))
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 1))
singletons
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 2))
singletons
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 2))
singletons
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 1))
singletons
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 1)) %>%
select_if(colSums() > 0)
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 1)) %>%
select_if(any)
View(singletons)
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 1)) %>%
select_if(colSums(.) > 0)
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 1)) %>%
select_if(~colSums(.) > 0)
singletons <- as(otu_table(Wd1), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 1)) %>%
select_if(~max(.) > 0)
View(singletons)
?max
~max()
~max(singletons)
?~
singles <- function(phy){
df <- as(otu_table(phy), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 1)) %>%
select_if(~max(.) > 0)
return(df)
}
singles(Wd1)
singles(altstrips)
singles <- function(phy){
df <- as(otu_table(phy), "matrix") %>%
as_tibble(rownames = paste0("ASV", seq(ntaxa(.)))) %>%
filter_all(any_vars(. == 1)) %>%
select_if(~max(.) > 0)
return(df)
}
singles(Wd1)
singles(altstrips)
length("ASV")
length(nchar("ASV"))
nchar("ASV")
test <- head(singles(altstrips))
nchar(rownames(test))
lapply(rownames(test), nchar())
lapply(test, rownames(), nchar())
rm(test)
any(nchar(taxa_names(phy) > 10))
any(nchar(taxa_names(Wd1) > 10))
any(nchar(taxa_names(Wd1) > 20))
any(nchar(taxa_names(Wd1) > 50))
taxa_names(Wd1)
any(nchar(as.character(taxa_names(Wd1)) > 50))
any(nchar(as.character(taxa_names(Wd1)) > 500))
any(nchar(as.character(taxa_names(Wd1)) > 500))
as.character(taxa_names(Wd1))
x <- as.character(taxa_names(Wd1))
nchar(x)
nchar(as.character(taxa_names(Wd1)))
max(nchar(as.character(taxa_names(Wd1))))
any(nchar(as.character(taxa_names(Wd1))))
any(nchar(as.character(taxa_names(Wd1)))) > 10
singles <- function(phy){
if (any(nchar(as.character(taxa_names(phy)))) > 10) {
taxa_names(phy) <- paste0("ASV", seq(ntaxa(phy)))
}
df <- as(otu_table(phy), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 1)) %>%
select_if(~max(.) > 0)
return(df)
}
Wd1 <- subset_samples(altstrips, experiment %in% "Worle_Rainfall" & manure_treatment %in% "N" & !soil_type %in% "border" & depth %in% "1")
singles <- function(phy){
if (any(nchar(as.character(taxa_names(phy)))) > 10) {
taxa_names(phy) <- paste0("ASV", seq(ntaxa(phy)))
}
df <- as(otu_table(phy), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 1)) %>%
select_if(~max(.) > 0)
return(df)
}
taxa_names(Wd1)
singles(Wd1)
singles <- function(phy){
if (any(nchar(as.character(taxa_names(phy)))) > 10) {
taxa_names(phy) <- paste0("ASV", seq(ntaxa(phy)))
}
}
singles(Wd1)
x <- singles(Wd1)
singles <- function(phy){
if (any(nchar(as.character(taxa_names(phy)))) > 10) {
taxa_names(phy) <- paste0("ASV", seq(ntaxa(phy)))
}
return(phy)
}
x <- singles(Wd1)
taxa_names(x)
Wd1 <- subset_samples(altstrips, experiment %in% "Worle_Rainfall" & manure_treatment %in% "N" & !soil_type %in% "border" & depth %in% "1")
taxa_names(Wd1)
singles <- function(phy){
df <- as(otu_table(phy), "matrix") %>%
as_tibble(rownames = "ASV") %>%
filter_all(any_vars(. == 1)) %>%
select_if(~max(.) > 0)
return(df)
}
singles(Wd1)
